package com.avviare.sarthi.controller;


import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.avviare.sarthi.dto.Product;
import com.avviare.sarthi.service.ProductService;

@RestController
@RequestMapping("/api/products")
public class ProductController {

    @Autowired
    private ProductService productService;

    private static final String UPLOADED_FOLDER = "uploads/";

    @PostMapping
    public ResponseEntity<String> uploadProduct(
            @RequestParam("p_name") String pName,
            @RequestParam("p_desc") String pDesc,
            @RequestParam("image") MultipartFile image,
            @RequestParam("rate") double rate,
            @RequestParam("discount") double discount,
            @RequestParam("delivery_date") String deliveryDate,
            @RequestParam("return_duration") int returnDuration,
            @RequestParam("isdeliveryfree") String isDeliveryFree,
            @RequestParam("isreturn") String isReturn,
            @RequestParam("isCOD") String isCOD) {

        // Handle image file
        if (!image.isEmpty()) {
            try {
                // Save the image to the server
                byte[] bytes = image.getBytes();
                Path path = Paths.get(UPLOADED_FOLDER + image.getOriginalFilename());
                Files.write(path, bytes);
                
                // Store product information along with image path
                Product product = new Product();
                product.setpName(pName);
                product.setpDesc(pDesc);
                product.setImagePath(path.toString()); // Store image path
                product.setRate(rate);
                product.setDiscount(discount);
                product.setDeliveryDate(LocalDate.parse(deliveryDate));
                product.setReturnDuration(returnDuration);
                product.setIsDeliveryFree(Boolean.parseBoolean(isDeliveryFree));
                product.setIsReturn(Boolean.parseBoolean(isReturn));
                product.setIsCOD(Boolean.parseBoolean(isCOD));
                
                // Save product to database (assuming ProductService is properly implemented)
                productService.saveProduct(product);
                
                return ResponseEntity.ok("Product uploaded successfully!");
            } catch (IOException e) {
                return ResponseEntity.status(500).body("Error uploading image: " + e.getMessage());
            }
        }

        return ResponseEntity.badRequest().body("No image uploaded");
    }
}
