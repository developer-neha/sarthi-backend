package com.avviare.sarthi.controller;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.time.LocalDate;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.format.annotation.DateTimeFormat;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.avviare.sarthi.dto.Product;
import com.avviare.sarthi.service.ProductService;

@RestController
@RequestMapping("/api/products")
@CrossOrigin(origins = "http://localhost:3000") // Allow React frontend
public class ProductController {

    @Autowired
    private ProductService productService;

    @PostMapping
    public ResponseEntity<Product> uploadProduct(
            @RequestParam("p_name") String pName,
            @RequestParam("p_desc") String pDesc,
            @RequestParam("rate") double rate,
            @RequestParam("discount") double discount,
            @RequestParam("delivery_date") @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate deliveryDate,
            @RequestParam("return_duration") @DateTimeFormat(iso = DateTimeFormat.ISO.DATE) LocalDate returnDuration,
            @RequestParam("isdeliveryfree") String isDeliveryFree,
            @RequestParam("isreturn") String isReturn,
            @RequestParam("isCOD") String isCOD,
            @RequestParam("image") MultipartFile imageFile
    ) {
        try {
            // Save image to local folder
            String uploadDir = "uploads/";
            String fileName = System.currentTimeMillis() + "_" + imageFile.getOriginalFilename();
            Path imagePath = Paths.get(uploadDir, fileName);
            Files.createDirectories(imagePath.getParent());
            Files.write(imagePath, imageFile.getBytes());

            // Create and save product
            Product product = new Product();
            product.setpName(pName);
            product.setpDesc(pDesc);
            product.setRate(rate);
            product.setDiscount(discount);
            product.setDeliveryDate(deliveryDate);
            product.setReturnDuration(returnDuration);
            product.setIsDeliveryFree(isDeliveryFree);
            product.setIsReturn(isReturn);
            product.setIsCOD(isCOD);
            product.setImagePath("/uploads/" + fileName);

            Product savedProduct = productService.saveProduct(product);
            return new ResponseEntity<>(savedProduct, HttpStatus.CREATED);

        } catch (IOException e) {
            return new ResponseEntity<>(null, HttpStatus.INTERNAL_SERVER_ERROR);
        }
    }
}


